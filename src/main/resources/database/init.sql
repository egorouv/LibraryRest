CREATE TABLE LIBRARY (
    id SERIAL PRIMARY KEY,
    library_name VARCHAR(150) NOT NULL,
    address VARCHAR(150) NOT NULL
);

CREATE TABLE CATEGORY (
    id SERIAL PRIMARY KEY,
    category VARCHAR(50) NOT NULL
);

CREATE TABLE READERS (
    id SERIAL PRIMARY KEY,
    reader_name VARCHAR(50) NOT NULL,
    reader_surname VARCHAR(50) NOT NULL,
    birth_date DATE NOT NULL,
    library INTEGER REFERENCES LIBRARY(id),
    category INTEGER REFERENCES CATEGORY(id)
);

CREATE TABLE READING_ROOM (
    id SERIAL PRIMARY KEY,
    library INTEGER REFERENCES LIBRARY(id),
    room INTEGER NOT NULL CHECK (room > 0),
    UNIQUE (library, room)
);

CREATE TABLE LIBRARY_WORKERS (
    id SERIAL PRIMARY KEY,
    worker_name VARCHAR(50) NOT NULL,
    worker_surname VARCHAR(50) NOT NULL,
    birth_date DATE NOT NULL,
    work_place INTEGER REFERENCES READING_ROOM(id)
);

CREATE TABLE PUBLICATION_TITLE (
    id SERIAL PRIMARY KEY,
    title VARCHAR(150) NOT NULL
);

CREATE TABLE AUTHORS (
    id SERIAL PRIMARY KEY,
    author_name VARCHAR(50) NOT NULL,
    author_surname VARCHAR(50) NOT NULL
);

CREATE TABLE PUBLICATION_TYPE (
    id SERIAL PRIMARY KEY,
    type VARCHAR(50) NOT NULL
);

CREATE TABLE PUBLICATION_DESCRIPTION (
    id SERIAL PRIMARY KEY,
    title INTEGER REFERENCES PUBLICATION_TITLE(id),
    author INTEGER REFERENCES AUTHORS(id),
    type INTEGER REFERENCES PUBLICATION_TYPE(id)
);

CREATE TABLE LOCATION_HALL (
    id SERIAL PRIMARY KEY,
    library INTEGER REFERENCES LIBRARY(id),
    location_hall INTEGER NOT NULL CHECK (LOCATION_HALL > 0),
    UNIQUE (library, location_hall)
);

CREATE TABLE LOCATION_RACK (
    id SERIAL PRIMARY KEY,
    location_hall INTEGER REFERENCES LOCATION_HALL(id),
    location_rack INTEGER NOT NULL CHECK (LOCATION_RACK > 0),
    UNIQUE (location_hall, location_rack)
);

CREATE TABLE LOCATION_SHELF (
    id SERIAL PRIMARY KEY,
    location_rack INTEGER REFERENCES LOCATION_RACK(id),
    location_shelf INTEGER NOT NULL CHECK (LOCATION_SHELF > 0),
    UNIQUE (location_rack, location_shelf)
);

CREATE TABLE PUBLICATION (
    id SERIAL PRIMARY KEY,
    location INTEGER REFERENCES LOCATION_SHELF(id),
    description INTEGER REFERENCES PUBLICATION_DESCRIPTION(id),
    allow_take BOOLEAN NOT NULL,
    write_off BOOLEAN NOT NULL
);

CREATE TABLE ISSUANCE (
    id SERIAL PRIMARY KEY,
    reader INTEGER REFERENCES READERS(id),
    worker INTEGER REFERENCES LIBRARY_WORKERS(id),
    publication INTEGER REFERENCES PUBLICATION(id),
    issuance_date DATE NOT NULL,
    return_date DATE NOT NULL,
    actual_return_date DATE
);

CREATE TABLE REPLENISHMENT (
    id SERIAL PRIMARY KEY,
    replenishment_date DATE NOT NULL,
    library_worker INTEGER REFERENCES LIBRARY_WORKERS(id),
    publication INTEGER REFERENCES PUBLICATION(id)
);

CREATE TABLE WRITE_OFF (
    id SERIAL PRIMARY KEY,
    write_off_date DATE NOT NULL,
    library_worker INTEGER REFERENCES LIBRARY_WORKERS(id),
    publication INTEGER REFERENCES PUBLICATION(id)
);

CREATE TABLE STUDENT (
    id SERIAL PRIMARY KEY REFERENCES READERS(id),
    university VARCHAR(100) NOT NULL,
    course INTEGER NOT NULL,
    student_group VARCHAR(10) NOT NULL
);

CREATE TABLE SCHOOLBOY (
    id SERIAL PRIMARY KEY REFERENCES READERS(id),
    school VARCHAR(100) NOT NULL,
    class VARCHAR(10) NOT NULL
);

CREATE TABLE TEACHER (
    id SERIAL PRIMARY KEY REFERENCES READERS(id),
    place_of_work VARCHAR(100) NOT NULL,
    job_title VARCHAR(50) NOT NULL
);

CREATE TABLE RESEARCHER (
    id SERIAL PRIMARY KEY REFERENCES READERS(id),
    organization VARCHAR(100) NOT NULL,
    topic VARCHAR(100) NOT NULL
);

CREATE TABLE WORKER (
    id SERIAL PRIMARY KEY REFERENCES READERS(id),
    place_of_work VARCHAR(100) NOT NULL,
    job_title VARCHAR(50) NOT NULL
);
